# Makefile.in generated by automake 1.11.3 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/warzone2100legacy
pkgincludedir = $(includedir)/warzone2100legacy
pkglibdir = $(libdir)/warzone2100legacy
pkglibexecdir = $(libexecdir)/warzone2100legacy
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
bin_PROGRAMS = wz2100legacy$(EXEEXT)
#am__append_1 = $(top_builddir)/win32/wz2100legacy.o $(WIN32_LIBS)
subdir = src
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in level_lexer.cpp scriptvals_lexer.cpp \
	scriptvals_parser.cpp scriptvals_parser.h
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/acx_pthread.m4 \
	$(top_srcdir)/m4/ax_c_check_flag.m4 \
	$(top_srcdir)/m4/ax_compare_version.m4 \
	$(top_srcdir)/m4/ax_prog_perl_version.m4 \
	$(top_srcdir)/m4/ax_tls.m4 $(top_srcdir)/m4/ax_with_prog.m4 \
	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/nls.m4 \
	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/progversion.m4 \
	$(top_srcdir)/m4/stack-protector.m4 \
	$(top_srcdir)/m4/strlfuncs.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_wz2100legacy_OBJECTS = action.$(OBJEXT) advvis.$(OBJEXT) \
	ai.$(OBJEXT) astar.$(OBJEXT) atmos.$(OBJEXT) aud.$(OBJEXT) \
	baseobject.$(OBJEXT) bridge.$(OBJEXT) bucket3d.$(OBJEXT) \
	challenge.$(OBJEXT) cheat.$(OBJEXT) clparse.$(OBJEXT) \
	cluster.$(OBJEXT) cmddroid.$(OBJEXT) combat.$(OBJEXT) \
	component.$(OBJEXT) configuration.$(OBJEXT) console.$(OBJEXT) \
	data.$(OBJEXT) design.$(OBJEXT) difficulty.$(OBJEXT) \
	display3d.$(OBJEXT) display.$(OBJEXT) drive.$(OBJEXT) \
	droid.$(OBJEXT) e3demo.$(OBJEXT) edit3d.$(OBJEXT) \
	effects.$(OBJEXT) feature.$(OBJEXT) fpath.$(OBJEXT) \
	frontend.$(OBJEXT) function.$(OBJEXT) game.$(OBJEXT) \
	gateway.$(OBJEXT) geometry.$(OBJEXT) group.$(OBJEXT) \
	hci.$(OBJEXT) ingameop.$(OBJEXT) init.$(OBJEXT) \
	intdisplay.$(OBJEXT) intelmap.$(OBJEXT) intimage.$(OBJEXT) \
	intorder.$(OBJEXT) keybind.$(OBJEXT) keyedit.$(OBJEXT) \
	keymap.$(OBJEXT) level_lexer.$(OBJEXT) levels.$(OBJEXT) \
	lighting.$(OBJEXT) loadsave.$(OBJEXT) loop.$(OBJEXT) \
	main.$(OBJEXT) map.$(OBJEXT) mapdisplay.$(OBJEXT) \
	mapgrid.$(OBJEXT) mechanics.$(OBJEXT) message.$(OBJEXT) \
	miscimd.$(OBJEXT) mission.$(OBJEXT) move.$(OBJEXT) \
	multibot.$(OBJEXT) multigifts.$(OBJEXT) multiint.$(OBJEXT) \
	multijoin.$(OBJEXT) multilimit.$(OBJEXT) multimenu.$(OBJEXT) \
	multiopt.$(OBJEXT) multiplay.$(OBJEXT) multistat.$(OBJEXT) \
	multistruct.$(OBJEXT) multisync.$(OBJEXT) objects.$(OBJEXT) \
	objmem.$(OBJEXT) oprint.$(OBJEXT) order.$(OBJEXT) \
	pointtree.$(OBJEXT) power.$(OBJEXT) projectile.$(OBJEXT) \
	qtscript.$(OBJEXT) qtscriptfuncs.$(OBJEXT) radar.$(OBJEXT) \
	random.$(OBJEXT) raycast.$(OBJEXT) research.$(OBJEXT) \
	scores.$(OBJEXT) scriptai.$(OBJEXT) scriptcb.$(OBJEXT) \
	scriptextern.$(OBJEXT) scriptfuncs.$(OBJEXT) \
	scriptobj.$(OBJEXT) scripttabs.$(OBJEXT) scriptvals.$(OBJEXT) \
	scriptvals_lexer.$(OBJEXT) scriptvals_parser.$(OBJEXT) \
	selection.$(OBJEXT) seqdisp.$(OBJEXT) stats.$(OBJEXT) \
	structure.$(OBJEXT) template.$(OBJEXT) terrain.$(OBJEXT) \
	text.$(OBJEXT) texture.$(OBJEXT) transporter.$(OBJEXT) \
	version.$(OBJEXT) visibility.$(OBJEXT) warcam.$(OBJEXT) \
	warzoneconfig.$(OBJEXT) wavecast.$(OBJEXT) wrappers.$(OBJEXT)
wz2100legacy_OBJECTS = $(am_wz2100legacy_OBJECTS)
am__DEPENDENCIES_1 =
#am__DEPENDENCIES_2 =  \
#	$(top_builddir)/win32/wz2100legacy.o \
#	$(am__DEPENDENCIES_1)
wz2100legacy_DEPENDENCIES = $(wz2100legacy_LIBS) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)
YLWRAP = $(top_srcdir)/ylwrap
YACCCOMPILE = $(YACC) $(AM_YFLAGS) $(YFLAGS)
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(wz2100legacy_SOURCES)
DIST_SOURCES = $(wz2100legacy_SOURCES)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
A2X = a2x
ACLOCAL = ${SHELL} /home/ben/wz2100legacy/wzlegacy/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AUTOCONF = ${SHELL} /home/ben/wz2100legacy/wzlegacy/missing --run autoconf
AUTOHEADER = ${SHELL} /home/ben/wz2100legacy/wzlegacy/missing --run autoheader
AUTOMAKE = ${SHELL} /home/ben/wz2100legacy/wzlegacy/missing --run automake-1.11
AWK = gawk
BFD_LIBS = 
CC = gcc -std=gnu99
CCDEPMODE = depmode=gcc3
CCOMPILER = ccompiler
CC_FOR_BUILD = gcc -std=gnu99
CFLAGS =  -fstack-protector
CFLAGS_FOR_BUILD =  -fstack-protector
CPP = gcc -std=gnu99 -E
CPPFLAGS = 
CPPFLAGS_FOR_BUILD = 
CXX = g++
CXXCOMPILER = cxxcompiler
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -fstack-protector
CXXFLAGS_FOR_BUILD =  -fstack-protector
CXX_FOR_BUILD = g++
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FLEX_FLAGS = -o lex.yy.c
FONTCONFIG_CFLAGS =  
FONTCONFIG_LIBS = -lfontconfig  
FREETYPE_CFLAGS = -I/usr/include/freetype2  
FREETYPE_LIBS = -lfreetype  
FRIBIDI_CFLAGS = -I/usr/include/fribidi  
FRIBIDI_LIBS = -lfribidi  
GETTEXT_MACRO_VERSION = 0.17
GLEW_CFLAGS = -I/usr/include/GL  
GLEW_LIBS = -lGLEW  
GMSGFMT = /bin/msgfmt
GMSGFMT_015 = /bin/msgfmt
GREP = /bin/grep
HACHA = 
HEVEA = 
IBERTY_LIBS = 
INSTALL = /bin/install -c
INSTALLER_COMPRESSION = lzma
INSTALLER_EXTDIR = 
INSTALLER_VERSION = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
LDFLAGS = -lz -rdynamic 
LEX = flex
LEXLIB = 
LEX_OUTPUT_ROOT = lex.yy
LIBICONV = -liconv
LIBINTL = 
LIBOBJS = 
LIBS = 
LTLIBICONV = -liconv
LTLIBINTL = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/ben/wz2100legacy/wzlegacy/missing --run makeinfo
MAKENSIS = 
MKDIR_P = /bin/mkdir -p
MOC4 = /bin/moc-qt4
MSGFMT = /bin/msgfmt
MSGFMT_015 = /bin/msgfmt
MSGMERGE = /bin/msgmerge
OBJEXT = o
OPENAL_CFLAGS =  
OPENAL_LIBS = -lopenal  
OPENGLC_LIBS = -lfribidi   -lfreetype   -lfontconfig   -lpthread -lGL -lGLU -lGLEW  
OPENGL_LIBS = -lGL -lGLU
PACKAGE = warzone2100legacy
PACKAGE_BUGREPORT = http://universe2.us/wzlegacy
PACKAGE_NAME = Warzone 2100 Legacy
PACKAGE_STRING = Warzone 2100 Legacy microwave_popping
PACKAGE_TARNAME = warzone2100legacy
PACKAGE_URL = 
PACKAGE_VERSION = microwave_popping
PATH_SEPARATOR = :
PDFLATEX = 
PERL = /bin/perl
PERL_VERSION = This is perl 5, version 14, subversion 2 (v5.14.2) built for i386-linux-thread-multi
PHYSFS_LIBS = -lphysfs
PKGCONFIG_DEFAULT_PREFIX = 
PKGCONFIG_PREFIX = 
PKG_CONFIG = /bin/pkg-config
PNG_CFLAGS = -I/usr/include/libpng15  
PNG_LIBS = -lpng15  
POSUB = po
PTHREAD_CC = gcc -std=gnu99
PTHREAD_CFLAGS = 
PTHREAD_LIBS = -lpthread
QT4_CFLAGS = -DQT_SHARED -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include/QtOpenGL -I/usr/include/QtNetwork -I/usr/include/QtScript  
QT4_LIBS = -lQtOpenGL -lQtGui -lQtNetwork -lQtScript -lQtCore  
QT4_VERSION = 4.8.2
RANLIB = ranlib
RCC4 = /bin/rcc
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
THEORA_CFLAGS =  
THEORA_LIBS = -ltheora -logg  
UIC4 = /bin/uic-qt4
UNZIP = unzip
USE_NLS = yes
VERSION = microwave_popping
VORBISFILE_CFLAGS =  
VORBISFILE_LIBS = -lvorbisfile -lvorbis -lm -logg  
VORBIS_CFLAGS =  
VORBIS_LIBS = -lvorbis -lm -logg  
WIN32_LIBS = 
WINDRES = 
WKHTMLTOPDF = 
WZ_C99FLAGS = 
WZ_CFLAGS =  -g -Wall -Wextra -Wno-unused-parameter -Wno-sign-compare -Wcast-align -Wwrite-strings -Wpointer-arith -Wno-format-security -Wstrict-prototypes -Wdeclaration-after-statement  -Wno-switch -Wno-enum-compare
WZ_CPPFLAGS =  -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -DNDEBUG -DWZ_DATADIR="\"${datadir}/${PACKAGE}\"" -DLOCALEDIR="\"${localedir}\"" -I$(top_srcdir) -I$(top_srcdir)/3rdparty -I$(top_srcdir)/3rdparty/quesoglc
WZ_CXXFLAGS =  -g -Wno-enum-compare -Wall -Wextra -Wno-unused-parameter -Wno-sign-compare -Wcast-align -Wwrite-strings -Wpointer-arith -Wno-format-security
XGETTEXT = /bin/xgettext
XGETTEXT_015 = /bin/xgettext
XGETTEXT_EXTRA_OPTIONS = 
XMKMF = 
X_LIBS = -lX11 -lXrandr 
YACC = bison -y
YFLAGS = 
ZIP = zip
ZIP_UPDATE = --filesync
abs_builddir = /home/ben/wz2100legacy/wzlegacy/src
abs_srcdir = /home/ben/wz2100legacy/wzlegacy/src
abs_top_builddir = /home/ben/wz2100legacy/wzlegacy
abs_top_srcdir = /home/ben/wz2100legacy/wzlegacy
ac_ct_CC = gcc
ac_ct_CXX = g++
acx_pthread_config = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
applicationdir = ${datarootdir}/applications
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
icondir = ${datarootdir}/icons
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/ben/wz2100legacy/wzlegacy/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_CPPFLAGS = -DYY_NO_INPUT $(PHYSFS_CFLAGS) $(PNG_CFLAGS) $(VORBISFILE_CFLAGS) $(VORBIS_CFLAGS) $(OPENAL_CFLAGS) $(OPENGLC_CFLAGS) $(OPENGL_CFLAGS) $(WZ_CPPFLAGS) $(GLEW_CFLAGS)
AM_CFLAGS = $(WZ_CFLAGS)
AM_CXXFLAGS = $(WZ_CXXFLAGS) $(QT4_CFLAGS)
AM_LFLAGS = $(FLEX_FLAGS)
AM_YFLAGS = -d
BUILT_SOURCES = \
	autorevision.h \
	$(CLEANFILES)

CLEANFILES = \
	scriptvals_parser.h

EXTRA_DIST = \
	autorevision.h \
	cursorselection

noinst_HEADERS = \
	action.h \
	actiondef.h \
	advvis.h \
	ai.h \
	anim_id.h \
	astar.h \
	atmos.h \
	basedef.h \
	baseobject.h \
	bridge.h \
	bucket3d.h \
	cheat.h \
	challenge.h \
	clparse.h \
	cluster.h \
	cmddroiddef.h \
	cmddroid.h \
	combat.h \
	component.h \
	configuration.h \
	console.h \
	data.h \
	design.h \
	difficulty.h \
	display3ddef.h \
	display3d.h \
	displaydef.h \
	display.h \
	drive.h \
	droiddef.h \
	droid.h \
	e3demo.h \
	edit3d.h \
	effects.h \
	featuredef.h \
	feature.h \
	fpath.h \
	frend.h \
	frontend.h \
	functiondef.h \
	function.h \
	game.h \
	gateway.h \
	geometry.h \
	group.h \
	hci.h \
	ingameop.h \
	init.h \
	intdisplay.h \
	intelmap.h \
	intfac.h \
	intimage.h \
	intorder.h \
	keybind.h \
	keyedit.h \
	keymap.h \
	levelint.h \
	levels.h \
	lighting.h \
	loadsave.h \
	loop.h \
	main.h \
	mapdisplay.h \
	mapgrid.h \
	map.h \
	mechanics.h \
	messagedef.h \
	message.h \
	miscimd.h \
	missiondef.h \
	mission.h \
	modding.h \
	movedef.h \
	move.h \
	multigifts.h \
	multiint.h \
	multijoin.h \
	multilimit.h \
	multimenu.h \
	multiplay.h \
	multirecv.h \
	multistat.h \
	objectdef.h \
	objects.h \
	objmem.h \
	oprint.h \
	orderdef.h \
	order.h \
	pointtree.h \
	positiondef.h \
	power.h \
	projectiledef.h \
	projectile.h \
	qtscript.h \
	qtscriptfuncs.h \
	radar.h \
	random.h \
	raycast.h \
	researchdef.h \
	research.h \
	scores.h \
	scriptai.h \
	scriptcb.h \
	scriptextern.h \
	scriptfuncs.h \
	scriptobj.h \
	scripttabs.h \
	scriptvals.h \
	selection.h \
	seqdisp.h \
	statsdef.h \
	stats.h \
	stringdef.h \
	structuredef.h \
	structure.h \
	template.h \
	terrain.h \
	text.h \
	texture.h \
	transporter.h \
	visibility.h \
	version.h \
	warcam.h \
	warzoneconfig.h \
	wavecast.h \
	weapondef.h \
	wrappers.h

wz2100legacy_SOURCES = \
	action.cpp \
	advvis.cpp \
	ai.cpp \
	astar.cpp \
	atmos.cpp \
	aud.cpp \
	baseobject.cpp \
	bridge.cpp \
	bucket3d.cpp \
	challenge.cpp \
	cheat.cpp \
	clparse.cpp \
	cluster.cpp \
	cmddroid.cpp \
	combat.cpp \
	component.cpp \
	configuration.cpp \
	console.cpp \
	data.cpp \
	design.cpp \
	difficulty.cpp \
	display3d.cpp \
	display.cpp \
	drive.cpp \
	droid.cpp \
	e3demo.cpp \
	edit3d.cpp \
	effects.cpp \
	feature.cpp \
	fpath.cpp \
	frontend.cpp \
	function.cpp \
	game.cpp \
	gateway.cpp \
	geometry.cpp \
	group.cpp \
	hci.cpp \
	ingameop.cpp \
	init.cpp \
	intdisplay.cpp \
	intelmap.cpp \
	intimage.cpp \
	intorder.cpp \
	keybind.cpp \
	keyedit.cpp \
	keymap.cpp \
	level_lexer.lpp \
	levels.cpp \
	lighting.cpp \
	loadsave.cpp \
	loop.cpp \
	main.cpp \
	map.cpp \
	mapdisplay.cpp \
	mapgrid.cpp \
	mechanics.cpp \
	message.cpp \
	miscimd.cpp \
	mission.cpp \
	move.cpp \
	multibot.cpp \
	multigifts.cpp \
	multiint.cpp \
	multijoin.cpp \
	multilimit.cpp \
	multimenu.cpp \
	multiopt.cpp \
	multiplay.cpp \
	multistat.cpp \
	multistruct.cpp \
	multisync.cpp \
	objects.cpp \
	objmem.cpp \
	oprint.cpp \
	order.cpp \
	pointtree.cpp \
	power.cpp \
	projectile.cpp \
	qtscript.cpp \
	qtscriptfuncs.cpp \
	radar.cpp \
	random.cpp \
	raycast.cpp \
	research.cpp \
	scores.cpp \
	scriptai.cpp \
	scriptcb.cpp \
	scriptextern.cpp \
	scriptfuncs.cpp \
	scriptobj.cpp \
	scripttabs.cpp \
	scriptvals.cpp \
	scriptvals_lexer.lpp \
	scriptvals_parser.ypp \
	selection.cpp \
	seqdisp.cpp \
	stats.cpp \
	structure.cpp \
	template.cpp \
	terrain.cpp \
	text.cpp \
	texture.cpp \
	transporter.cpp \
	version.cpp \
	visibility.cpp \
	warcam.cpp \
	warzoneconfig.cpp \
	wavecast.cpp \
	wrappers.cpp

wz2100legacy_LIBS = \
	$(top_builddir)/lib/widget/libwidget.a \
	$(top_builddir)/lib/sequence/libsequence.a \
	$(top_builddir)/lib/sound/libsound.a \
	$(top_builddir)/lib/script/libscript.a \
	$(top_builddir)/lib/netplay/libnetplay.a \
	$(top_builddir)/lib/ivis_opengl/libivis_opengl.a \
	$(top_builddir)/lib/gamelib/libgamelib.a \
	$(top_builddir)/lib/framework/libframework.a \
	$(top_builddir)/lib/exceptionhandler/libexceptionhandler.a \
	$(top_builddir)/3rdparty/miniupnpc/libminiupnpc.a \
	$(top_builddir)/3rdparty/quesoglc/libquesoglc.a \
	$(top_builddir)/lib/backend/libbackend.a

wz2100legacy_LDADD = $(wz2100legacy_LIBS) $(LTLIBINTL) $(PHYSFS_LIBS) \
	$(PNG_LIBS) $(VORBISFILE_LIBS) $(VORBIS_LIBS) $(THEORA_LIBS) \
	$(OPENAL_LIBS) $(OPENGLC_LIBS) $(OPENGL_LIBS) $(QT4_LIBS) \
	$(GLEW_LIBS) $(X_LIBS) $(X_EXTRA_LIBS) $(LDFLAGS) \
	$(am__append_1)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .lpp .o .obj .ypp
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
scriptvals_parser.h: scriptvals_parser.cpp
	@if test ! -f $@; then rm -f scriptvals_parser.cpp; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) scriptvals_parser.cpp; else :; fi
wz2100legacy$(EXEEXT): $(wz2100legacy_OBJECTS) $(wz2100legacy_DEPENDENCIES) $(EXTRA_wz2100legacy_DEPENDENCIES) 
	@rm -f wz2100legacy$(EXEEXT)
	$(CXXLINK) $(wz2100legacy_OBJECTS) $(wz2100legacy_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/action.Po
include ./$(DEPDIR)/advvis.Po
include ./$(DEPDIR)/ai.Po
include ./$(DEPDIR)/astar.Po
include ./$(DEPDIR)/atmos.Po
include ./$(DEPDIR)/aud.Po
include ./$(DEPDIR)/baseobject.Po
include ./$(DEPDIR)/bridge.Po
include ./$(DEPDIR)/bucket3d.Po
include ./$(DEPDIR)/challenge.Po
include ./$(DEPDIR)/cheat.Po
include ./$(DEPDIR)/clparse.Po
include ./$(DEPDIR)/cluster.Po
include ./$(DEPDIR)/cmddroid.Po
include ./$(DEPDIR)/combat.Po
include ./$(DEPDIR)/component.Po
include ./$(DEPDIR)/configuration.Po
include ./$(DEPDIR)/console.Po
include ./$(DEPDIR)/data.Po
include ./$(DEPDIR)/design.Po
include ./$(DEPDIR)/difficulty.Po
include ./$(DEPDIR)/display.Po
include ./$(DEPDIR)/display3d.Po
include ./$(DEPDIR)/drive.Po
include ./$(DEPDIR)/droid.Po
include ./$(DEPDIR)/e3demo.Po
include ./$(DEPDIR)/edit3d.Po
include ./$(DEPDIR)/effects.Po
include ./$(DEPDIR)/feature.Po
include ./$(DEPDIR)/fpath.Po
include ./$(DEPDIR)/frontend.Po
include ./$(DEPDIR)/function.Po
include ./$(DEPDIR)/game.Po
include ./$(DEPDIR)/gateway.Po
include ./$(DEPDIR)/geometry.Po
include ./$(DEPDIR)/group.Po
include ./$(DEPDIR)/hci.Po
include ./$(DEPDIR)/ingameop.Po
include ./$(DEPDIR)/init.Po
include ./$(DEPDIR)/intdisplay.Po
include ./$(DEPDIR)/intelmap.Po
include ./$(DEPDIR)/intimage.Po
include ./$(DEPDIR)/intorder.Po
include ./$(DEPDIR)/keybind.Po
include ./$(DEPDIR)/keyedit.Po
include ./$(DEPDIR)/keymap.Po
include ./$(DEPDIR)/level_lexer.Po
include ./$(DEPDIR)/levels.Po
include ./$(DEPDIR)/lighting.Po
include ./$(DEPDIR)/loadsave.Po
include ./$(DEPDIR)/loop.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/map.Po
include ./$(DEPDIR)/mapdisplay.Po
include ./$(DEPDIR)/mapgrid.Po
include ./$(DEPDIR)/mechanics.Po
include ./$(DEPDIR)/message.Po
include ./$(DEPDIR)/miscimd.Po
include ./$(DEPDIR)/mission.Po
include ./$(DEPDIR)/move.Po
include ./$(DEPDIR)/multibot.Po
include ./$(DEPDIR)/multigifts.Po
include ./$(DEPDIR)/multiint.Po
include ./$(DEPDIR)/multijoin.Po
include ./$(DEPDIR)/multilimit.Po
include ./$(DEPDIR)/multimenu.Po
include ./$(DEPDIR)/multiopt.Po
include ./$(DEPDIR)/multiplay.Po
include ./$(DEPDIR)/multistat.Po
include ./$(DEPDIR)/multistruct.Po
include ./$(DEPDIR)/multisync.Po
include ./$(DEPDIR)/objects.Po
include ./$(DEPDIR)/objmem.Po
include ./$(DEPDIR)/oprint.Po
include ./$(DEPDIR)/order.Po
include ./$(DEPDIR)/pointtree.Po
include ./$(DEPDIR)/power.Po
include ./$(DEPDIR)/projectile.Po
include ./$(DEPDIR)/qtscript.Po
include ./$(DEPDIR)/qtscriptfuncs.Po
include ./$(DEPDIR)/radar.Po
include ./$(DEPDIR)/random.Po
include ./$(DEPDIR)/raycast.Po
include ./$(DEPDIR)/research.Po
include ./$(DEPDIR)/scores.Po
include ./$(DEPDIR)/scriptai.Po
include ./$(DEPDIR)/scriptcb.Po
include ./$(DEPDIR)/scriptextern.Po
include ./$(DEPDIR)/scriptfuncs.Po
include ./$(DEPDIR)/scriptobj.Po
include ./$(DEPDIR)/scripttabs.Po
include ./$(DEPDIR)/scriptvals.Po
include ./$(DEPDIR)/scriptvals_lexer.Po
include ./$(DEPDIR)/scriptvals_parser.Po
include ./$(DEPDIR)/selection.Po
include ./$(DEPDIR)/seqdisp.Po
include ./$(DEPDIR)/stats.Po
include ./$(DEPDIR)/structure.Po
include ./$(DEPDIR)/template.Po
include ./$(DEPDIR)/terrain.Po
include ./$(DEPDIR)/text.Po
include ./$(DEPDIR)/texture.Po
include ./$(DEPDIR)/transporter.Po
include ./$(DEPDIR)/version.Po
include ./$(DEPDIR)/visibility.Po
include ./$(DEPDIR)/warcam.Po
include ./$(DEPDIR)/warzoneconfig.Po
include ./$(DEPDIR)/wavecast.Po
include ./$(DEPDIR)/wrappers.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.lpp.cpp:
	$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

.ypp.cpp:
	$(am__skipyacc) $(SHELL) $(YLWRAP) $< y.tab.c $@ y.tab.h $*.h y.output $*.output -- $(YACCCOMPILE)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f level_lexer.cpp
	-rm -f scriptvals_lexer.cpp
	-rm -f scriptvals_parser.cpp
	-rm -f scriptvals_parser.h
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS


.PHONY: autorevision.h

autorevision.h:
	(cd $(top_srcdir) && ./build_tools/autorevision.sh $(abs_top_builddir)/src/autorevision.h || true)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
